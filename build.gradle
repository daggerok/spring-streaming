buildscript {
  ext {
    environmentFileDir = 'env'
    springBootVersion = '1.5.16.RELEASE'
    propertiesPluginEnvironmentNameProperty = 'env'
    className = 'com.daggerok.spring.streaming.SpringStreamingApplication'
  }
}

plugins {
  id 'java'
  id 'idea'
  id 'eclipse'
  id 'application'
  id 'net.saliman.properties' version '1.4.6'
  id 'com.github.ben-manes.versions' version '0.15.0'
  id 'io.franzbecker.gradle-lombok' version '1.14' apply false
  id 'io.spring.dependency-management' version '1.0.6.RELEASE' apply false
  id 'org.springframework.boot' version '1.5.16.RELEASE'
}

allprojects {

  apply plugin: 'java'
  version '2.0.1'
  group 'com.github.daggerok'
  sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
  repositories {
    mavenCentral()
    jcenter()
  }
  tasks.withType(JavaPlugin) {
    options.encoding = "UTF-8"
  }
  defaultTasks 'clean', 'build'

  apply plugin: 'io.franzbecker.gradle-lombok'
  lombok.version = '1.18.2'

  apply plugin: 'io.spring.dependency-management'
  dependencyManagement {
    imports {
      mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
  }

  apply plugin: 'org.springframework.boot'
}

subprojects {
  tasks.withType(org.springframework.boot.gradle.plugin.SpringBootPlugin as Class) {
    bootRepackage.enabled = false
    executable = false
  }
}

dependencies {
  compile 'org.springframework.boot:spring-boot-starter',
                 'org.springframework.boot:spring-boot-starter-websocket'


  compile 'org.springframework.boot:spring-boot-starter-data-jpa',
                 'org.springframework.boot:spring-boot-starter-data-rest',
                 'org.springframework.boot:spring-boot-starter-hateoas',
                 'org.springframework.boot:spring-boot-starter-cache'

  runtime 'com.h2database:h2'

  testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc',
                     'org.springframework.boot:spring-boot-starter-test'
  ['web', 'admin']
      .collect { ":$it" }
      .each { compile(project(it)) }
}

wrapper {
  gradleVersion = '4.10.1'
}

apply plugin: 'org.springframework.boot'
bootRepackage.enabled = true
springBoot {
  executable = true
  mainClass = project.className
}
// gradle bootRun -Dserver.context-path=/app
bootRun {
  systemProperties = System.properties
}

['web', 'admin', 'reactor'].each {
  assemble.dependsOn ":$it:assemble"
}

// no one cares, that shit doesn't work at all... use bash ./build/libs/*.jar
apply plugin: 'application'
mainClassName = project.className

distZip {
  into(".") {
    from 'src/main/resources'
    include '*.properties'
    into "$project.name-$project.version/"
  }
  into(".") {
    from 'src/main/resources'
    include '*.properties'
    into "$project.name-$project.version/bin"
  }
  into(".") {
    from 'src/main/resources'
    include '*.properties'
    into "$project.name-$project.version/lib"
  }
}

distTar {
  into('.') {
    from 'src/main/resources'
    include '*.properties'
  }
  into './bin'
}
